{"remainingRequest":"/home/winson/Documents/projects/js_demo/mail/spa/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/winson/Documents/projects/js_demo/mail/spa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/winson/Documents/projects/js_demo/mail/spa/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/winson/Documents/projects/js_demo/mail/spa/src/views/soudu.vue?vue&type=template&id=5fda6940&scoped=true&","dependencies":[{"path":"/home/winson/Documents/projects/js_demo/mail/spa/src/views/soudu.vue","mtime":1656726800911},{"path":"/home/winson/Documents/projects/js_demo/mail/spa/node_modules/cache-loader/dist/cjs.js","mtime":1656724691535},{"path":"/home/winson/Documents/projects/js_demo/mail/spa/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1656724692691},{"path":"/home/winson/Documents/projects/js_demo/mail/spa/node_modules/cache-loader/dist/cjs.js","mtime":1656724691535},{"path":"/home/winson/Documents/projects/js_demo/mail/spa/node_modules/vue-loader/lib/index.js","mtime":1656724692691}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}