{"remainingRequest":"/home/winson/Documents/projects/js_demo/mail/spa/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/winson/Documents/projects/js_demo/mail/spa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/winson/Documents/projects/js_demo/mail/spa/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/winson/Documents/projects/js_demo/mail/spa/src/views/main.vue?vue&type=template&id=c9a65f5a&scoped=true&","dependencies":[{"path":"/home/winson/Documents/projects/js_demo/mail/spa/src/views/main.vue","mtime":1656681610185},{"path":"/home/winson/Documents/projects/js_demo/mail/spa/node_modules/cache-loader/dist/cjs.js","mtime":1656671152056},{"path":"/home/winson/Documents/projects/js_demo/mail/spa/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1656671112068},{"path":"/home/winson/Documents/projects/js_demo/mail/spa/node_modules/cache-loader/dist/cjs.js","mtime":1656671152056},{"path":"/home/winson/Documents/projects/js_demo/mail/spa/node_modules/vue-loader/lib/index.js","mtime":1656671112068}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}